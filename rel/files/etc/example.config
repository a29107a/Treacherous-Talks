%% -*- erlang -*-

%% This is an example of a Treacherous Talks cluster configuration. It defines
%% only one host (localhost) but explains what the different configuration
%% options mean. It should be usable for testing purposes without any changes.

%% Usage: feed the path and filename to this file to the cluster_manager and
%% perform an action (such as --ping).

[
 %% One host tuple for each machine
 {host,
  %% The domain or IP address of the host
  "127.0.0.1",
  %% The name of the System Manager node on the host
  "system_manager",
  %% A list of release specifications for this host
  [
   %% One release tuple for each release. The release can either be riak,
   %% backend, smtp_frontend, xmpp_frontend or web_frontend.
   {release,
    %% The release type (one of the types given above)
    riak,
    %% The node name of this release (what Erlang thinks its name is)
    riak,
    %% A list of application configuration tuples. These tuples correspond to
    %% the possible options given in the app config file for each release in the
    %% etc directory. Note that the configuration given below will override the
    %% configuration in Riaks' app.config file.
    [
     %% http is a list of IP addresses and TCP ports that the Riak HTTP
     %% interface will bind. This is set here so that we easily can see what
     %% ports we want the backend to use for communicating with Riak.
     {riak_core, [
                  {http, [{"127.0.0.1", 8091}]}
                 ]},
     %% The same as above, but for the Riak Protocol Buffers interface.
     {riak_kv, [
                {pb_ip, "127.0.0.1"},
                {pb_port, 8081}
               ]},
     %% Riak Search must be enabled on every Riak node since it is used by the
     %% backend.
     {riak_search, [
                    {enabled, true}
                   ]}
    ]},
   {release,
    %% The release type (one of the types given above)
    backend,
    %% The node name of this release (what Erlang thinks its name is)
    backend,
    %% A list of application configuration tuples. These tuples correspond to
    %% the possible options given in the app config file for each release in the
    %% etc directory. Note that the configuration given below will override the
    %% configuration in the app.backend.config file.
    [
     {db, [
           %% The domain or address of one of the nodes in the Riak cluster
           {riak_ip, "127.0.0.1"},
           %% The HTTP port the Riak node uses
           {riak_database_port, 8091},
           %% The Protocol Buffer port the Riak node uses
           {riak_protobuf_port, 8081}
          ]},
     {message, [
                %% The number of workers in the worker pool for the messaging
                %% application
                {message_workers, 100}
               ]},
     {controller_app, [
                       %% The number of workers in the worker pool for handling
                       %% traffic between frontends and a backend
                       {controller_app_workers, 100}
                      ]},
     {game, [
             %% The number of workers in the worker pool for the game
             %% application
             {game_workers, 100}
            ]}
    ]},
   {release,
    %% The release type (one of the types given above)
    smtp_frontend,
    %% The node name of this release (what Erlang thinks its name is)
    smtp_frontend,
    %% A list of application configuration tuples. These tuples correspond to
    %% the possible options given in the app config file for each release in the
    %% etc directory. Note that the configuration given below will override the
    %% configuration in the app.smtp_frontend.config file.
    [
     {smtp_frontend, [
                      %% Set the domain name if you want it to be something else
                      %% than your % machines' hostname
                      %{domain, "localhost"},
                      %% The IP address to bind to
                      {address, {0,0,0,0}},
                      %% The port to bind to. Note that regular SMTP uses port
                      %% 25. It is set here to 2525 so that the release can run
                      %% without superuser privileges.
                      {port, 2525}
                     ]}
    ]},
   {release,
    %% The release type (one of the types given above)
    xmpp_frontend,
    %% The node name of this release (what Erlang thinks its name is)
    xmpp_frontend,
    %% A list of application configuration tuples. Note that the XMPP frontend
    %% differ in configuration from the other frontends. All configuration of
    %% that is done in ejabberd.cfg in the etc directory.
    [
    ]},
   {release,
    %% The release type (one of the types given above)
    web_frontend,
    %% The node name of this release (what Erlang thinks its name is)
    web_frontend,
    %% A list of application configuration tuples. These tuples correspond to
    %% the possible options given in the app config file for each release in the
    %% etc directory. Note that the configuration given below will override the
    %% configuration in the app.web_frontend.config file.
    [
     {web_frontend, [
                     %% A list of interfaces to bind to
                     {listen, ["127.0.0.1"]},
                     %% The port to bind to. Note that regular HTTP uses port
                     %% 80. It is set to 8000 here so that the release can run
                     %% without superuser privileges.
                     {port, 8000}
                    ]}
    ]}
  ]}
].
