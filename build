#!/bin/bash

# erlang's os:cmd does not return the exit code,
#therefore this is implemented as bash script

cwd=$(pwd)
errors=0
ejdctl=ext_rel/xmpp_frontend/rel/xmpp_frontend/installation/sbin/ejabberdctl

# Setup the shell to report errors even when piping commands. This allows sed
# to operate on output while preserving the exit code from the previous
# command. Warning! This is a bash specific feature.
set -o pipefail

# Color definitions
c_red="\033[31m"
c_brown="\033[33m"
c_reset="\033[0m"

# Convenience function for echoing to stderr
function echoerr() { echo -e $c_red##### "$@" 1>&2 $c_reset; }
# Convenience function for normal echoing with brown color
function echonormal() { echo -e $c_brown##### "$@" $c_reset; }

# This is a wrapper function that takes one argument, the command to run, and
# executes it. It streams all output through sed to replace warnings so that
# Buildbot won't pick them up. It also indicates if an error occured.
function build_dep () {
    local_error=0
    $1 | sed s/Warning/ignore-warning/ || local_error=1
    case "$local_error" in
        0) echonormal "Exit status: success\n" ;;
        *) echoerr "Exit status: ERROR\n"
           errors=1 ;;
    esac
}

#################################

# Get dependencies
echonormal "getting external dependencies"
rebar get-deps || errors=1

# YAWS web server
echonormal "downloading yaws"
mkdir -p deps
cd deps
# Ignore errors from git clone since we'll still detect the when doing git
# checkout and we will get errors if it already is there
git clone https://github.com/ahilsend/yaws.git 2>&1
cd yaws
git checkout websocket_hy10 2>&1 || errors=1

echonormal "building yaws"
cd $cwd/deps/yaws
autoconf || errors=1
./configure --disable-pam || errors=1
build_dep "make -j4"
cd $cwd

# Main Rebar compile
echonormal "running top-level rebar compile"
rebar compile
case $? in
    0)  echonormal "Exit status: success\n" ;;
    *)  echoerr "Exit status: ERROR\n"
        errors=1 ;;
esac

# Create edocs
echonormal "generating edocs for all apps"
rebar doc skip_deps=true
case $? in
    0)  echonormal "Exit status: success\n" ;;
    *)  echoerr "Exit status: ERROR\n"
        errors=1 ;;
esac

# XMPP FRONTEND (ejabberd)
# Ideally build xmpp_frontend after building the rest since
# so that rebar's intermittent failures don't break the entire
# build. xmpp_frontend's makefile runs rebar build scripts in
# without the above loop.
echonormal "building xmpp_frontend"
# ejabberd
echo trying to build ejabberd
cd ext_rel/xmpp_frontend
build_dep "make release"
cd $cwd

# XMPP FRONTEND TESTS
echonormal "building xmpp_frontend tests (including exmpp)"
cd ext_test/ejabberd_echo
build_dep "./build"
cd $cwd


if (( errors )); then
    echoerr "Build was NOT successfull."
else
    echonormal "Build was successfull."
fi

exit $errors

