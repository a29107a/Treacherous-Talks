#!/bin/bash

# erlang's os:cmd does not return the exit code, 
#therefore this is implemented as bash script

cwd=$(pwd)
errors=0

rebar get-deps || errors=1

#################################
## build the global dependencies here (if they require, for instance, make-calls)

#PROTOBUFFS
cd deps/protobuffs
make all
cd ../..

# RIAK CLIENT
cd deps/riakc
make all
cd ../..

# YAWS WEB SERVER
echo trying to build yaws
cd deps/yaws
autoconf
./configure --disable-pam
make
cd ../..
##
##################################

cd $cwd/apps
for app in $(ls); do
    if [ ! -d $app ]; then
	echo $app is not a dir
	pwd
	continue
    fi

    echo $app
    cd $app
    if [ -x build ]; then
	echo "####################################"
	echo trying to build $app
        RACE_COND=".."
        while [ ! -z "$RACE_COND" ]; do
            echo "##### executing " $(pwd)"/build"
            app_build_errors=0
	    OUT=$(./build 2>&1 || app_build_errors=1)
            echo -e "$OUT"
            RACE_COND=$(echo $OUT  | grep ".bea#" | grep "no such file or directory")
        done
        if [ $app_build_errors != 0 ]; then
            echo "############ ERROR "
            errors=1
        fi
    fi
    cd ..
done
cd $cwd

echo "errors=$errors"

exit $errors

